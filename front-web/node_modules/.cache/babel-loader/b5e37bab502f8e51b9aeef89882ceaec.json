{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\workspaces\\\\ws-sds2\\\\dsdeliver\\\\front-web\\\\src\\\\Orders\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport ProductsList from './ProductsList';\nimport StepsHeader from './StepsHeader';\nimport './styles.css';\nimport { useEffect, useState } from 'react';\nimport { fetchProducts, saveOrder } from '../api';\nimport OrderLocation from './OrderLocation';\nimport OrderSummary from './OrderSummary';\nimport Footer from '../Footer';\nimport { checkIsSelected } from './helpers';\nimport { toast } from 'react-toastify';\n\nfunction Orders() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [orderLocation, setOrderLocation] = useState();\n  const totalPrice = selectedProducts.reduce((sum, item) => {\n    return sum + item.price;\n  }, 0);\n  useEffect(() => {\n    fetchProducts().then(response => setProducts(response.data)).catch(err => {\n      toast.warning('Erro ao listar produtos');\n    });\n  }, []);\n\n  const handleSelectProduct = product => {\n    const isAlreadySelected = checkIsSelected(selectedProducts, product);\n\n    if (isAlreadySelected) {\n      const selected = selectedProducts.filter(item => item.id !== product.id);\n      setSelectedProducts(selected);\n    } else {\n      setSelectedProducts(previous => [...previous, product]);\n    }\n  };\n\n  const handleSubmit = () => {\n    const productsIds = selectedProducts.map(({\n      id\n    }) => ({\n      id\n    }));\n    const payload = { ...orderLocation,\n      products: productsIds\n    };\n    saveOrder(payload).then(response => {\n      toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n      setSelectedProducts([]);\n    }).catch(() => {\n      toast.warning('Erro ao enviar pedido');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(StepsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(ProductsList, {\n        products: products,\n        onSelectProduct: handleSelectProduct,\n        selectedProducts: selectedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(OrderLocation, {\n        onChangeLocation: location => setOrderLocation(location)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {\n        amount: selectedProducts.length,\n        totalPrice: totalPrice,\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Orders, \"a0XR3mkaH+o1GuPfZzyP1pIgjB4=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/workspaces/ws-sds2/dsdeliver/front-web/src/Orders/index.tsx"],"names":["ProductsList","StepsHeader","useEffect","useState","fetchProducts","saveOrder","OrderLocation","OrderSummary","Footer","checkIsSelected","toast","Orders","products","setProducts","selectedProducts","setSelectedProducts","orderLocation","setOrderLocation","totalPrice","reduce","sum","item","price","then","response","data","catch","err","warning","handleSelectProduct","product","isAlreadySelected","selected","filter","id","previous","handleSubmit","productsIds","map","payload","error","location","length"],"mappings":"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","sourcesContent":["import ProductsList from './ProductsList';\r\nimport StepsHeader from './StepsHeader';\r\nimport './styles.css';\r\nimport { useEffect, useState} from 'react';\r\nimport { OrderLocationData, Product } from './types';\r\nimport { fetchProducts, saveOrder } from '../api';\r\nimport OrderLocation from './OrderLocation';\r\nimport OrderSummary from './OrderSummary';\r\nimport Footer from '../Footer';\r\nimport { checkIsSelected } from './helpers';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Orders() {\r\n    const[products, setProducts] = useState<Product[]>([]);\r\n    const[selectedProducts, setSelectedProducts] = useState<Product[]>([]);\r\n    const [orderLocation, setOrderLocation] = useState<OrderLocationData>();\r\n    const totalPrice= selectedProducts.reduce((sum, item) => {\r\n        return sum+item.price;\r\n    }, 0);\r\n    \r\n    useEffect(() => {\r\n        fetchProducts()\r\n        .then(response => setProducts(response.data))\r\n        .catch(err => {\r\n          toast.warning('Erro ao listar produtos');\r\n        }) \r\n    }, []);\r\n\r\n    const handleSelectProduct = (product: Product) => {\r\n        const isAlreadySelected = checkIsSelected(selectedProducts, product);\r\n      \r\n        if (isAlreadySelected) {\r\n          const selected = selectedProducts.filter(item => item.id !== product.id);\r\n          setSelectedProducts(selected);\r\n        } else {\r\n          setSelectedProducts(previous => [...previous, product]);\r\n        }\r\n      }\r\n\r\n      const handleSubmit = () => {\r\n        const productsIds = selectedProducts.map(({ id }) => ({ id }));\r\n        const payload = {\r\n          ...orderLocation!,\r\n          products: productsIds\r\n        }\r\n      \r\n        saveOrder(payload)\r\n         .then((response) => {\r\n          toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\r\n          setSelectedProducts([]);\r\n        })\r\n          .catch(() => {\r\n            toast.warning('Erro ao enviar pedido');\r\n          })\r\n      }\r\n\r\n    return(\r\n       <>\r\n       <div className=\"orders-container\">\r\n           <StepsHeader />\r\n           <ProductsList \r\n           products={products} \r\n           onSelectProduct={handleSelectProduct}\r\n           selectedProducts={selectedProducts}\r\n           />\r\n           <OrderLocation \r\n            onChangeLocation = {location => setOrderLocation(location)}\r\n           />\r\n           <OrderSummary \r\n            amount={selectedProducts.length} \r\n            totalPrice={totalPrice}\r\n            onSubmit={handleSubmit}\r\n            />\r\n       </div>\r\n        <Footer />\r\n       </>\r\n       \r\n    )\r\n}\r\nexport default Orders;"]},"metadata":{},"sourceType":"module"}